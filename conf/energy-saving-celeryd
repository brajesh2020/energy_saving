#!/bin/bash
#
# energy-saving-celeryd          Energy saving celeryd daemon
##################################

# LSB header

### BEGIN INIT INFO
# Provides: energy-saving-celeryd
# Required-Start: $networking $apache2
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: energy saving celeryd
# Description: energy saving celery daemon service
#              
### END INIT INFO
DEBIAN=/etc/debian_version
SUSE=/etc/SuSE-release
CELERY=`which celery`
CONFIG=energy_saving.utils.celeryconfig
PIDFILE=/var/run/celery-worker.pid
LOGFILE=/tmp/celery-worker.log

if [ -f $DEBIAN ]; then
    . /lib/lsb/init-functions
elif [ -f $SUSE -a -r /etc/rc.status ]; then
    . /etc/rc.status
else
    . /etc/rc.d/init.d/functions
fi

RETVAL=0
start() {
    echo -n "Starting energy saving Celeryd: "
    C_FORCE_ROOT=1 $CELERY worker --quiet --detach --purge --autoscale=10,3 --config $CONFIG --pidfile $PIDFILE --logfile $LOGFILE
    RETVAL=$?
    echo
    retries=0
    max_retries=10
    output=''
    while [ $retries -lt $max_retries ]; do
      output=$($CELERY status --config $CONFIG)
      RETVAL=$?
      if [ "$RETVAL" == "0" ]; then
          break
      else
          sleep 10
      fi
      let retries=${retries}+1
    done
    if [ "$RETVAL" != "0" ]; then
        echo $output
    fi
    return $RETVAL
}

stop() {
    echo -n "Stopping energy saving Celeryd: "
    if [ -f $SUSE ]; then
        killproc -t 10 -p $PIDFILE $CELERY
        rc_status -v
        RETVAL=$?
    elif [ -f $DEBIAN ]; then
        killproc -p $PIDFILE $CELERY -TERM
        RETVAL=$?
    else
        killproc -p $PIDFILE -d 30 $CELERY
        RETVAL=$?
    fi
    if [ "$RETVAL" == "0" ]; then
        rm -f $PIDFILE
    fi
    echo
}

restart() {
   stop
   start
}

case "$1" in
    start|stop|restart)
        $1
        ;;
    status)
        echo -n "Checking energy saving celeryd: "
        $CELERY status --config $CONFIG
        if [ -f $SUSE ]; then
            checkproc -v -p $PIDFILE $CELERY
            rc_status -v
            RETVAL=$?
        elif [ -f $DEBIAN ]; then
            status_of_proc -p $PIDFILE $CELERY
            RETVAL=$?
        else
            status -p $PIDFILE $CELERY
            RETVAL=$?
        fi
        if [ "$RETVAL" == "0" ]; then
            $CELERY status
            RETVAL=$?
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $RETVAL
