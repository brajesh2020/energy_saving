"""init

Revision ID: 20c4b8156f4f
Revises: 
Create Date: 2017-07-20 22:12:07.233875

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20c4b8156f4f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datacenter',
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('type', sa.Enum('production', 'lab'), server_default='production', nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('models', sa.JSON(), nullable=True),
    sa.Column('time_interval', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('controller',
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('controller_attribute',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('differentiation_mean', sa.Float(), nullable=True),
    sa.Column('differentiation_deviation', sa.Float(), nullable=True),
    sa.Column('differentiation_max', sa.Float(), nullable=True),
    sa.Column('differentiation_min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('controller_parameter',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('controller_power_supply',
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('controller_power_supply_attribute',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('differentiation_mean', sa.Float(), nullable=True),
    sa.Column('differentiation_deviation', sa.Float(), nullable=True),
    sa.Column('differentiation_max', sa.Float(), nullable=True),
    sa.Column('differentiation_min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('energy_optimazation_target',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('differentiation_mean', sa.Float(), nullable=True),
    sa.Column('differentiation_deviation', sa.Float(), nullable=True),
    sa.Column('differentiation_max', sa.Float(), nullable=True),
    sa.Column('differentiation_min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('environment_sensor',
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('environment_sensor_attribute',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('differentiation_mean', sa.Float(), nullable=True),
    sa.Column('differentiation_deviation', sa.Float(), nullable=True),
    sa.Column('differentiation_max', sa.Float(), nullable=True),
    sa.Column('differentiation_min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('power_supply',
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('power_supply_attribute',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('differentiation_mean', sa.Float(), nullable=True),
    sa.Column('differentiation_deviation', sa.Float(), nullable=True),
    sa.Column('differentiation_max', sa.Float(), nullable=True),
    sa.Column('differentiation_min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('prediction',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('sensor',
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('sensor_attribute',
    sa.Column('type', sa.Enum('binary', 'continuous', 'integer', 'discrete'), server_default='continuous', nullable=True),
    sa.Column('unit', sa.String(length=36), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('differentiation_mean', sa.Float(), nullable=True),
    sa.Column('differentiation_deviation', sa.Float(), nullable=True),
    sa.Column('differentiation_max', sa.Float(), nullable=True),
    sa.Column('differentiation_min', sa.Float(), nullable=True),
    sa.Column('possible_values', sa.JSON(), nullable=True),
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('test_result',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'name')
    )
    op.create_table('controller_attribute_data',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('controller_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name', 'controller_name'], ['controller.datacenter_name', 'controller.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name', 'name'], ['controller_attribute.datacenter_name', 'controller_attribute.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'controller_name', 'name')
    )
    op.create_table('controller_parameter_data',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('controller_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name', 'controller_name'], ['controller.datacenter_name', 'controller.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name', 'name'], ['controller_parameter.datacenter_name', 'controller_parameter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'controller_name', 'name')
    )
    op.create_table('controller_power_supply_attribute_data',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('controller_power_supply_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name', 'controller_power_supply_name'], ['controller_power_supply.datacenter_name', 'controller_power_supply.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name', 'name'], ['controller_power_supply_attribute.datacenter_name', 'controller_power_supply_attribute.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'controller_power_supply_name', 'name')
    )
    op.create_table('environment_sensor_attribute_data',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('environment_sensor_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name', 'environment_sensor_name'], ['environment_sensor.datacenter_name', 'environment_sensor.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name', 'name'], ['environment_sensor_attribute.datacenter_name', 'environment_sensor_attribute.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'environment_sensor_name', 'name')
    )
    op.create_table('power_supply_attribute_data',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('power_supply_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name', 'name'], ['power_supply_attribute.datacenter_name', 'power_supply_attribute.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name', 'power_supply_name'], ['power_supply.datacenter_name', 'power_supply.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'power_supply_name', 'name')
    )
    op.create_table('sensor_attribute_data',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('sensor_name', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['datacenter_name', 'name'], ['sensor_attribute.datacenter_name', 'sensor_attribute.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name', 'sensor_name'], ['sensor.datacenter_name', 'sensor.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'sensor_name', 'name')
    )
    op.create_table('sensor_attribute_slo',
    sa.Column('datacenter_name', sa.String(length=36), nullable=False),
    sa.Column('sensor_attribute_name', sa.String(length=36), nullable=False),
    sa.Column('min_threshold', sa.Float(), nullable=True),
    sa.Column('max_threshold', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['datacenter_name', 'sensor_attribute_name'], ['sensor_attribute.datacenter_name', 'sensor_attribute.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['datacenter_name'], ['datacenter.name'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('datacenter_name', 'sensor_attribute_name')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensor_attribute_slo')
    op.drop_table('sensor_attribute_data')
    op.drop_table('power_supply_attribute_data')
    op.drop_table('environment_sensor_attribute_data')
    op.drop_table('controller_power_supply_attribute_data')
    op.drop_table('controller_parameter_data')
    op.drop_table('controller_attribute_data')
    op.drop_table('test_result')
    op.drop_table('sensor_attribute')
    op.drop_table('sensor')
    op.drop_table('prediction')
    op.drop_table('power_supply_attribute')
    op.drop_table('power_supply')
    op.drop_table('environment_sensor_attribute')
    op.drop_table('environment_sensor')
    op.drop_table('energy_optimazation_target')
    op.drop_table('controller_power_supply_attribute')
    op.drop_table('controller_power_supply')
    op.drop_table('controller_parameter')
    op.drop_table('controller_attribute')
    op.drop_table('controller')
    op.drop_table('datacenter')
    # ### end Alembic commands ###
